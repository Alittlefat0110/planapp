<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.schedule.getmail.mapper.GetMailMapper">
    <resultMap id="planDataMap" type="com.schedule.getmail.entity.PlanData">
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="position" property="position"/>
        <result column="starttime" property="starttime"/>
        <result column="endtime" property="endtime"/>
        <result column="plantime" property="plantime"/>
    </resultMap>
    <resultMap id="ConferenceData" type="com.schedule.getmail.entity.ConferenceData">
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="sender" property="sender"/>
        <result column="receivetime" property="receivetime"/>
        <result column="position" property="position"/>
        <result column="starttime" property="starttime"/>
        <result column="endtime" property="endtime"/>
    </resultMap>
    <resultMap id="EmailFilter" type="com.schedule.getmail.entity.EmailFilter">
        <result column="filter_name" property="filter_name"/>
        <result column="filter_key" property="filter_key"/>
    </resultMap>

    <resultMap id="EmailConfig" type="com.schedule.getmail.entity.EmailConfig">
        <result column="email_id" property="email_id"/>
        <result column="email" property="email"/>
    </resultMap>
    <!--邮箱配置start-->
    <insert id="mailInsert" parameterType="com.schedule.getmail.mapper.GetMailMapper" keyProperty="email_id" useGeneratedKeys="true" >
        insert into email_config (username, email, password,encrypt,createtime,updatetime,flag) values
        <foreach collection="list" separator="," item="cus">
            (#{cus.username}, #{cus.email}, #{cus.password}, #{cus.encrypt}, #{cus.createtime}, #{cus.updatetime}, #{cus.flag})
        </foreach>
    </insert>
<!--查询配置邮箱信息-->
    <select id="mailSelect" resultMap="EmailConfig" >
        SELECT email_id,email FROM email_config where username=#{username}
    </select>
    <!--删除邮箱post-->
    <delete id="mailDelete" parameterType="com.schedule.getmail.mapper.GetMailMapper">
            delete from email_config where email_id in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>
    <!--邮箱配置end-->

    <!--同步邮箱数据-->
    <insert  id="transferFromEmail" keyProperty="email_ref_id" useGeneratedKeys="true" >
       insert ignore into email_data (email_ref_id,sender, title, content,receivetime,owner,createtime,updatetime) values
        <foreach collection="list" separator="," item="cus">
            (#{cus.email_ref_id},
            #{cus.sender},
            #{cus.title},
            #{cus.content},
            #{cus.receivetime},
            #{cus.owner},
            #{cus.createtime},
            #{cus.updatetime})
        </foreach>
    </insert>

    <!--同步会议（日历）数据-->
    <insert  id="transferFromCalendar"  >
        insert ignore into conference_data ( calendar_id,sender,receivetime,title,content,position,starttime,endtime,createtime) values
        <foreach collection="list" separator="," item="cus">
            (#{cus.calendar_id},
            #{cus.sender},
            #{cus.receivetime},
            #{cus.title},
            #{cus.content},
            #{cus.position},
            #{cus.starttime},
            #{cus.endtime},
            #{cus.createtime})
        </foreach>
    </insert>
<!--从会议数据表查询数据（用于插入日程表） -->
    <select id="selectConferenceData" resultMap="ConferenceData" >
        select title,content,position,starttime,endtime from conference_data;
    </select>
    <insert id="dailyPlanGetFromConference" parameterType="com.schedule.getmail.entity.PlanData" keyProperty="plan_id" useGeneratedKeys="true" >
        insert ignore into plan_data (username, title, content,position,starttime,endtime,plantime,createtime,updatetime,flag,source) values
        <foreach collection="list" separator="," item="cus">
            (#{cus.username},
            #{cus.title},
            #{cus.content},
            #{cus.position},
            #{cus.starttime},
            #{cus.endtime},
            #{cus.plantime},
            #{cus.createtime},
            #{cus.updatetime},
            #{cus.flag},
            #{cus.source})
        </foreach>
    </insert>

   <!--查询邮件最新邮件收件时间-->
    <select id="latestReceiveTime" resultType="Date" >
        select max(receivetime) as receivetime from email_data;
    </select>
    <!--查询会议最新会议收件时间-->
    <select id="latestCalendarReceiveTime" resultType="Date" >
        select max(receivetime) as receivetime from conference_data;
    </select>
    <!--查询会议最早邮件收件时间-->
    <select id="oldestReceiveTime" resultType="Date" >
        select min(receivetime) as receivetime from email_data;
    </select>
    <!--获取邮件内容-->
    <select id="maildatacontent" resultType="string" >
        SELECT content FROM email_data where owner=#{owner}
    </select>
    <!--查询过滤关键词
    <select id="selectTitleFromFilter" resultMap="EmailFilter" >
        SELECT filter_key FROM email_filter where filter_name=title
    </select>
    -->
    <!--查询过滤条件-->
    <select id="selectFilterKeyFromFilter" resultType="string" >
        SELECT filter_key FROM email_filter where filter_name=#{filter_name}
    </select>
    <!--查询日程标题-->
    <select id="selectTitleFromPlanData" resultType="string" >
        SELECT  title FROM plan_data
    </select>
    <!--查询时间段内的数据-->
    <select id="selectByTimeRange" resultMap="planDataMap" >
        SELECT  title,content,position,starttime,endtime,plantime FROM
        plan_data  main
        WHERE main.starttime between #{startTime} and #{endTime}
        and username = #{username}
        ORDER  BY  main.starttime
    </select>
    <!--热词对应主题查询日程-->
    <select id="selectByTitle" resultMap="planDataMap" >
        SELECT  title,content,position,starttime,endtime,plantime FROM
        plan_data  main
        WHERE title = #{title}
        ORDER  BY  main.starttime
    </select>
    <select id="selectByWord" resultMap="planDataMap" >
        SELECT  title,content,position,starttime,endtime,plantime FROM
        plan_data  main
        WHERE title like concat(concat('%',#{title}),'%')
        ORDER  BY  main.starttime
    </select>


    <insert id="addWordsFrequency" parameterType="com.schedule.getmail.entity.TitleFrequency" keyProperty="id" useGeneratedKeys="true" >
        insert  into title_frequency (words, frequency) values
        <foreach collection="list" separator="," item="cus">
            (#{cus.words},
            #{cus.frequency})
        </foreach>
        ON DUPLICATE KEY UPDATE
        frequency=values(frequency)
    </insert>
    <select id="selectHottestWords" resultType="string" >
    SELECT  words FROM title_frequency where frequency=(select max(frequency) as frequency from title_frequency)
    </select>



</mapper>